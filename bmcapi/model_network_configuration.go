/*
Bare Metal Cloud API

Bare Metal Cloud API allows you to create, power off, power on, reset, reboot, or shut down your server. Also deprovision servers, manage SSH key details, and a lot more. Manage your infrastructure more efficiently using just a few simple API calls. </br></br>**All URLs are relative to (https://api.phoenixnap.com/bmc/v0/)**

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmcapi

import (
	"encoding/json"
)

// NetworkConfiguration Entire network details of bare metal server.
type NetworkConfiguration struct {
	PrivateNetworkConfiguration *PrivateNetworkConfiguration `json:"privateNetworkConfiguration,omitempty"`
}

// NewNetworkConfiguration instantiates a new NetworkConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkConfiguration() *NetworkConfiguration {
	this := NetworkConfiguration{}
	return &this
}

// NewNetworkConfigurationWithDefaults instantiates a new NetworkConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkConfigurationWithDefaults() *NetworkConfiguration {
	this := NetworkConfiguration{}
	return &this
}

// GetPrivateNetworkConfiguration returns the PrivateNetworkConfiguration field value if set, zero value otherwise.
func (o *NetworkConfiguration) GetPrivateNetworkConfiguration() PrivateNetworkConfiguration {
	if o == nil || o.PrivateNetworkConfiguration == nil {
		var ret PrivateNetworkConfiguration
		return ret
	}
	return *o.PrivateNetworkConfiguration
}

// GetPrivateNetworkConfigurationOk returns a tuple with the PrivateNetworkConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfiguration) GetPrivateNetworkConfigurationOk() (*PrivateNetworkConfiguration, bool) {
	if o == nil || o.PrivateNetworkConfiguration == nil {
		return nil, false
	}
	return o.PrivateNetworkConfiguration, true
}

// HasPrivateNetworkConfiguration returns a boolean if a field has been set.
func (o *NetworkConfiguration) HasPrivateNetworkConfiguration() bool {
	if o != nil && o.PrivateNetworkConfiguration != nil {
		return true
	}

	return false
}

// SetPrivateNetworkConfiguration gets a reference to the given PrivateNetworkConfiguration and assigns it to the PrivateNetworkConfiguration field.
func (o *NetworkConfiguration) SetPrivateNetworkConfiguration(v PrivateNetworkConfiguration) {
	o.PrivateNetworkConfiguration = &v
}

func (o NetworkConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrivateNetworkConfiguration != nil {
		toSerialize["privateNetworkConfiguration"] = o.PrivateNetworkConfiguration
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkConfiguration struct {
	value *NetworkConfiguration
	isSet bool
}

func (v NullableNetworkConfiguration) Get() *NetworkConfiguration {
	return v.value
}

func (v *NullableNetworkConfiguration) Set(val *NetworkConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkConfiguration(val *NetworkConfiguration) *NullableNetworkConfiguration {
	return &NullableNetworkConfiguration{value: val, isSet: true}
}

func (v NullableNetworkConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
